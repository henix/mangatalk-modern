/*
Theme Name: MangaTalk Modern
Theme URI: http://mangatalk.net
Author: Karuto / Vincent Zhang
Author URI: http://karu.me
Description: A (relatively) modernized, revamped version of MangaTalk theme.
Version: 0.1
License: GNU General Public License v2 or later
License URI: http://www.gnu.org/licenses/gpl-2.0.html
*/

/* =Notes
--------------------------------------------------------------
This stylesheet uses rem values with a pixel fallback. The rem
values (and line heights) are calculated using two variables:

$rembase:     14;
$line-height: 24;

---------- Examples

* Use a pixel value with a rem fallback for font-size, padding, margins, etc.
	padding: 5px 0;
	padding: 0.357142857rem 0; (5 / $rembase)

* Set a font-size and then set a line-height based on the font-size
	font-size: 16px
	font-size: 1.142857143rem; (16 / $rembase)
	line-height: 1.5; ($line-height / 16)

---------- Vertical spacing

Vertical spacing between most elements should use 24px or 48px
to maintain vertical rhythm:

.my-new-div {
	margin: 24px 0;
	margin: 1.714285714rem 0; ( 24 / $rembase )
}

---------- Further reading

http://snook.ca/archives/html_and_css/font-size-with-rem
http://blog.typekit.com/2011/11/09/type-study-sizing-the-legible-letter/





/* Base rules */
/* Notes
--------------------------------------------------------------

	* Base rules are defaults for the basic element selectors. 
	* Exclusively single element selectors, like html, body, form, input, a...
		* NO CLASS / ID SELECTORS ALLOWED.
	* Can include some attribute selectors or what not, but keep it minor.
	* Essentially, a base style says that whenever this element is on page, it 
	  should look like this by default (without extra styling).
	* Includes heading sizes, default link styles, default fonts, body bg...
	  and / or CSS resets.
	* No need to use !important here.

-------------------------------------------------------------- */

html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, 
blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, 
img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, 
i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, 
caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, 
embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, 
section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  vertical-align: baseline;
}
body {
  line-height: 1;
}
ol,
ul {
  list-style: none;
}
blockquote,
q {
  quotes: none;
}
blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
caption,
th,
td {
  font-weight: normal;
  text-align: left;
}
h1,
h2,
h3,
h4,
h5,
h6 {
 clear: both;
}
html {
  overflow-y: scroll;
  font-size: 100%;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
}
a:focus {
  outline: thin dotted;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
nav,
section {
  display: block;
}
audio,
canvas,
video {
  display: inline-block;
}
audio:not([controls]) {
  display: none;
}
del {
  color: #333;
}
ins {
  background: #fff9c0;
  text-decoration: none;
}
hr {
  background-color: #ccc;
  border: 0;
  height: 1px;
  margin: 24px;
  margin-bottom: 1.714285714rem; /* 24px */
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
small {
  font-size: smaller;
}
img {
  border: 0;
  -ms-interpolation-mode: bicubic;
}

body {
  background-color: #E7E7E2;

}



/* Layout rules */
/* Notes
--------------------------------------------------------------

	* Layout rules divide page into sections. Think of visual layout.
	* Each layout hold / contain one or more modules.
	* Layout itself is an empty container, it doesn't describe content.
	* Naming rule: add prefix "layout-".

-------------------------------------------------------------- */

/* Wholesite content (defined in header.php / footer.php) */
.layout-page-wrap { /* #page */
}

.layout-header-wrap {
/*  background-color: gray;
  position: fixed;
  width: 100%;
  z-index: 99;*/
}

.layout-main-wrap { /* #main */
  background-color: teal;
  margin: 0 auto;
  max-width: 1244px;
  padding: 10px 2px;
}
.layout-main-inner-wrap {
  background-color: silver;
  margin: 0 auto;
  max-width: 1240px;
}


/* Primary content */
.layout-primary-wrap {
  float: left;
  max-width: 
}
.layout-content-wrap {}

.layout-posts-section {
  /*border-collapse: collapse;*/
  display: table;
}
.layout-posts-row {
  display: table-row;
}

/* Secondary content */
.layout-sidebar-wrap {}

/* Footer content */
.layout-footer-wrap {}







/* Module rules */
/* Notes
--------------------------------------------------------------

	* Modules are reusable, modular parts of design.
	* Modules contain the actual content of a web-page. 
	* Think of sidebar widgets, post summaries, product lists...
	* Modules usually take the majority of lines in your CSS file.
	* Naming rule: no need, because this will be the majority of code.
		* But related elements of the same module (or, of a variation of that 
		  module) should have recognizable prefix to easily group them.

-------------------------------------------------------------- */

.site-header {

}

.main-navigation{}

.main-item-block {
  border: 1px solid #ce5333;
  display: table-cell;
  position: relative;
  vertical-align: top;  
  width: 33%;
}


.main-footer {}

/* State rules */
/* Notes
--------------------------------------------------------------

	* State rules describe how modules / layouts look like in a state.
	* Think of hidden, expanded, hover, highlighted, inactive, etc...
	* State rules also describe how modules / layout look on screen.
		* For example, how a sidebar module might look different in homepage,
		  and in an article page...
	* Naming rule: add prefix "is-".
		  
-------------------------------------------------------------- */




/* Misc rules */
/* Notes
--------------------------------------------------------------

	* Anything else that doesn't belong to the previous categories.
	* Usually contains common helper methods or what not.
	    * But keep it at a minimum.
		  
-------------------------------------------------------------- */

/* Clearing floats */
.clear:after,
.wrapper:after,
.format-status .entry-header:after {
  clear: both;
}
.clear:before,
.clear:after,
.wrapper:before,
.wrapper:after,
.format-status .entry-header:before,
.format-status .entry-header:after {
  display: table;
  content: "";
}